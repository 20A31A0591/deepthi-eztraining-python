#RANDOM MODULES
1.sample:
import random as r
>>x="i love sweets"
>>print(r.sample(x,2))
['l', ' ']
>>print(r.sample(x,2))
['v', 'e']

2.shuffle:
x=[1,2,3,4]
print(r.shuffle(x))
None
print(x)
[2, 4, 3, 1]
x="i love sweets "
print(r.shuffle(x))
Traceback (most recent call last):
  File "<pyshell#12>", line 1, in <module>
    print(r.shuffle(x))
  File "C:\Users\tamad\AppData\Local\Programs\Python\Python311\Lib\random.py", line 380, in shuffle
    x[i], x[j] = x[j], x[i]
TypeError: 'str' object does not support item assignment

3.choice:
x=[1,2,3,4]
print(r.choice(x))
2
print(r.choice(x))
4

3.1 choices
>>x=[10,20,30]
>>print(r.choices(x,k=10))
[10, 30, 30, 30, 20, 10, 20, 10, 20, 10]
>>x=" i love sweets"
>>print(r.choices(x,k=10))
['v', 'v', 'v', 's', 's', ' ', 'e', 'e', ' ', 't']
>>x=" i love sweets"
>>print(r.choices(x,h=10))
Traceback (most recent call last):
  File "<pyshell#36>", line 1, in <module>
    print(r.choices(x,h=10))
TypeError: Random.choices() got an unexpected keyword argument 'h'


4.uniform:     this is used to print random floating numbers
print(r.uniform(5,20))
9.233385914296477

5.randint and randrange:    this is used to print random integer numbers
print(r.randint(1,50))
34
print(r.randrange(1,50))
12

6.random: prints random num b/w 0.0 to 1.0 includes 0.0 and excludes 1.0
x=r.random()
x
0.70323745651509
x=r.random()
x
0.09392587202980096

#CALENDAR MODULE
1.calendar
import calendar
print(calendar.calendar(2022))
                                  2022

      January                   February                   March
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2          1  2  3  4  5  6          1  2  3  4  5  6
 3  4  5  6  7  8  9       7  8  9 10 11 12 13       7  8  9 10 11 12 13
10 11 12 13 14 15 16      14 15 16 17 18 19 20      14 15 16 17 18 19 20
17 18 19 20 21 22 23      21 22 23 24 25 26 27      21 22 23 24 25 26 27
24 25 26 27 28 29 30      28                        28 29 30 31
31

       April                      May                       June
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
             1  2  3                         1             1  2  3  4  5
 4  5  6  7  8  9 10       2  3  4  5  6  7  8       6  7  8  9 10 11 12
11 12 13 14 15 16 17       9 10 11 12 13 14 15      13 14 15 16 17 18 19
18 19 20 21 22 23 24      16 17 18 19 20 21 22      20 21 22 23 24 25 26
25 26 27 28 29 30         23 24 25 26 27 28 29      27 28 29 30
                          30 31

        July                     August                  September
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
             1  2  3       1  2  3  4  5  6  7                1  2  3  4
 4  5  6  7  8  9 10       8  9 10 11 12 13 14       5  6  7  8  9 10 11
11 12 13 14 15 16 17      15 16 17 18 19 20 21      12 13 14 15 16 17 18
18 19 20 21 22 23 24      22 23 24 25 26 27 28      19 20 21 22 23 24 25
25 26 27 28 29 30 31      29 30 31                  26 27 28 29 30

      October                   November                  December
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2          1  2  3  4  5  6                1  2  3  4
 3  4  5  6  7  8  9       7  8  9 10 11 12 13       5  6  7  8  9 10 11
10 11 12 13 14 15 16      14 15 16 17 18 19 20      12 13 14 15 16 17 18
17 18 19 20 21 22 23      21 22 23 24 25 26 27      19 20 21 22 23 24 25
24 25 26 27 28 29 30      28 29 30                  26 27 28 29 30 31
31

print(calendar.month(2022,3))
     March 2022
Mo Tu We Th Fr Sa Su
    1  2  3  4  5  6
 7  8  9 10 11 12 13
14 15 16 17 18 19 20
21 22 23 24 25 26 27
28 29 30 31

setfirstweekday():
print(calendar.setfirstweekday(calendar.WEDNESDAY))    # calendar starts with wednesday and case sensitive 
None
print(calendar.calendar(2022))
                                  2022

      January                   February                   March
We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu
          1  2  3  4                         1                         1
 5  6  7  8  9 10 11       2  3  4  5  6  7  8       2  3  4  5  6  7  8
12 13 14 15 16 17 18       9 10 11 12 13 14 15       9 10 11 12 13 14 15
19 20 21 22 23 24 25      16 17 18 19 20 21 22      16 17 18 19 20 21 22
26 27 28 29 30 31         23 24 25 26 27 28         23 24 25 26 27 28 29
                                                    30 31

       April                      May                       June
We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu
       1  2  3  4  5                   1  2  3       1  2  3  4  5  6  7
 6  7  8  9 10 11 12       4  5  6  7  8  9 10       8  9 10 11 12 13 14
13 14 15 16 17 18 19      11 12 13 14 15 16 17      15 16 17 18 19 20 21
20 21 22 23 24 25 26      18 19 20 21 22 23 24      22 23 24 25 26 27 28
27 28 29 30               25 26 27 28 29 30 31      29 30

        July                     August                  September
We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu
       1  2  3  4  5                      1  2          1  2  3  4  5  6
 6  7  8  9 10 11 12       3  4  5  6  7  8  9       7  8  9 10 11 12 13
13 14 15 16 17 18 19      10 11 12 13 14 15 16      14 15 16 17 18 19 20
20 21 22 23 24 25 26      17 18 19 20 21 22 23      21 22 23 24 25 26 27
27 28 29 30 31            24 25 26 27 28 29 30      28 29 30
                          31

      October                   November                  December
We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu
          1  2  3  4                         1          1  2  3  4  5  6
 5  6  7  8  9 10 11       2  3  4  5  6  7  8       7  8  9 10 11 12 13
12 13 14 15 16 17 18       9 10 11 12 13 14 15      14 15 16 17 18 19 20
19 20 21 22 23 24 25      16 17 18 19 20 21 22      21 22 23 24 25 26 27
26 27 28 29 30 31         23 24 25 26 27 28 29      28 29 30 31
                          30

####DISPLAY DATE MONTH#####

IMPORT DATETIME

>>>variable=datetime.datetime.now() //gives current date and time with milliseconds
>>>var=datetime.datetime.now()
>>>var
datetime.datetime(2023, 2, 3, 21, 21, 18, 410520)

variable=variable.strftime("%y") #prints the year like '23'
variable=variable.strftime("%Y") #prints the year like '2023'

>>>year=var.strftime("%Y")
>>>year
'2023'

>>>y=var.strftime("%y")
>>>y
'23'

>>>mon=var.strftime("%m")----->returns month
>>>mon
'02'

>>>date=var.strftime("%d")---------->returns date
>>>date
'03'

>>>m=var.strftime("%M")---------->returns minutes
>>>m
'25'

>>>time=var.strftime("%H:%M:%S")-------->returns time
>>>time
'21:25:35'

>>>date_time=var.strftime("%d/%m/%y , %H:%M:%S")-----> returns both date and time
>>>date_time
'03/02/23 , 21:25:35'

#FUNCTIONS
#CLASSIFICATIONS
1.predefined functions
2.user defined functions
For code reusability we use functions
lets say we want to use particular concept multiple times in our program instead of writing the same code multiple times 
we can write it once and include that inside a function and can call the function where ever we need it.
TYPES
1.Functions without arguments and without return value
2.functions without argument and with return value
3.with argument and with return value
4.with argument without return values

KEY WORD:--def
------------------------------------------------------------------------------------------------------------------------------------
###RECURSIVE FUNCTION###
A function which calls itself is called recursive function
This concept is called recursion






